" vi:syntax=vim

" Home directories
let g:coc_config_home = 'config'
let g:coc_data_home   = g:nvi_install_path . '/3rdparty/coc'

" Path to node
let g:coc_node_path = g:nvi_install_path . '/3rdparty/node/bin/node'

" Semantic highlight
let g:coc_default_semantic_highlight_groups = 1
" let g:coc_global_extensions = [ 'coc-clangd' ]
" let g:node_client_debug=1

" Close coc preview window after completion is done
autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif

" Do not show preview for autocomplete
set completeopt-=preview

call coc#config('clangd.path', g:nvi_install_path . '/3rdparty/coc/extensions/coc-clangd-data/install/13.0.0/clangd_13.0.0/bin/clangd')

" Colorize error messages
hi CocUnderline                                     gui=undercurl term=undercurl
hi CocErrorHighlight   ctermfg=red    guifg=#c4384b gui=undercurl term=undercurl
hi CocWarningHighlight ctermfg=yellow guifg=#c4ab39 gui=undercurl term=undercurl

" Configure ccls 
" call coc#config('languageserver', {
  \   'ccls': {
  \     'command'   : g:nvi_install_path . '/3rdparty/ccls/bin/ccls',
  \     'filetypes' : [
  \       'cxx', 'c', 'h', 'cpp', 'hpp'
  \     ],
  \     'rootPatterns' : [
  \       '.ccls', 'compile_commands.json'
  \     ],
  \     'initializationOptions' : {
  \       'cache' : {
  \         'directory' : './.ccls-cache'
  \       },
  \       'highlight' : {
  \         'lsRanges' : v:true
  \       }
  \     }
  \   }
  \ }
\)

