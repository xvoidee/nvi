" vi:syntax=vim

" Set leader key
let mapleader = "."

" Toggle file explorer
nnoremap <leader>t :NERDTreeToggle<CR>

" fzf-lua mappings
nnoremap <leader>b :FzfLua buffers<CR>
nnoremap <leader>f :FzfLua files<CR>
nnoremap <leader>j :FzfLua jumps<CR>
nnoremap <leader>m :FzfLua marks<CR>

" Work with quickfix list
nnoremap <leader>co :copen<CR>
nnoremap <leader>cc :cclose<CR>
nnoremap <leader>cp :cprev<CR>
nnoremap <leader>cn :cnext<CR>

" Work with harpoon
nnoremap <leader>a :lua require('harpoon'):list():add()<CR>
nnoremap <leader>s :lua require('harpoon').ui:toggle_quick_menu(require("harpoon"):list())<CR>
nnoremap <leader>1 :lua require('harpoon'):list():select(1)<CR>
nnoremap <leader>2 :lua require('harpoon'):list():select(2)<CR>
nnoremap <leader>3 :lua require('harpoon'):list():select(3)<CR>
nnoremap <leader>4 :lua require('harpoon'):list():select(4)<CR>
nnoremap <leader>5 :lua require('harpoon'):list():select(5)<CR>

" Diffview commands
nnoremap <leader>dvo :DiffviewOpen<CR>
nnoremap <leader>dvc :DiffviewClose<CR>

" Useful mappins
nnoremap <leader>vs :set hls!<CR>|                       " Toggle highlight on/off
nnoremap <leader>nnp :NoNeckPain<CR>|                    " Center active buffer on the screen

" Moving around
nnoremap <Tab> :lua require("flash")["jump"]()<CR>|      " Open fast jump

" Cycle through splits
nnoremap <leader>w <C-w>w|                               " Forward
nnoremap <leader>W <C-w>W|                               " Backward

" Working with buffers
nnoremap <F2> :wa<CR>|                                   " Save active buffer, keep opened
nnoremap <F8> :bp<bar>sp<bar>bn<bar>bd<CR>|              " Try to close active buffer
nnoremap <F10> :qa!<CR>|                                 " Ignore changes and quit
nnoremap <F12> :wqa<CR>|                                 " Save changes and quit
inoremap <silent> <ESC> <ESC>:wa<CR>|                    " Auto save on switch to command mode

" Cycle through opened buffers
nnoremap <S-h>     :bprev<CR>
nnoremap <S-l>     :bnext<CR>
nnoremap <S-Left>  :bprev<CR>
nnoremap <S-Right> :bnext<CR>

" coc mappings
nmap <silent> <F3>               <Plug>(coc-definition)
nmap <silent> <F4>               <Plug>(coc-implementation)
nmap <silent> <F5>               <Plug>(coc-references)
nmap <silent> <F6>               <Plug>(coc-rename)
nmap <silent> <F7>               <Plug>(coc-refactor)
nmap <silent> <F11>              :call CocAction('showSubTypes') <CR>
imap <C-l>                       <Plug>(coc-snippets-expand)
inoremap <silent><expr> <c-space> coc#refresh()

" Full-text search
" Exact match (whole word)
nnoremap <leader>aw :lua require('fzf-lua').live_grep({
  \ search = vim.fn.expand('<cword>'),
  \ rg_opts = '-F -w ' .. require('fzf-lua').defaults.grep.rg_opts
  \ })<CR>
" Substring match
nnoremap <leader>aW :lua require('fzf-lua').live_grep({
  \ search = vim.fn.expand('<cword>'),
  \ rg_opts = '-F ' .. require('fzf-lua').defaults.grep.rg_opts
  \ })<CR>
" Search selection
vnoremap <leader>as "0y :<C-u>lua require('fzf-lua').live_grep({
  \ search = vim.fn.getreg('0'),
  \ rg_opts = '-F ' .. require('fzf-lua').defaults.grep.rg_opts
  \ })<CR>

" If ESC pressed during search, confirm it instead of cancelling
cnoremap <expr> <ESC> getcmdtype() == '/' ? "\<CR>:noh\<CR>" : "\<C-c>"
